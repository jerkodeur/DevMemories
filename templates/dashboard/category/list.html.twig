{% extends 'dashboard/index.html.twig' %}

{% block title %}{% trans %}Mes catégories{% endtrans %}{% endblock %}

{% block body %}
    <div class="categories-main-container row">
        <section class="categories-handle-container col-12 col-md-6">
            <h1 id="category-title">
                {% trans %}Liste des catégories{% endtrans %}
                <span>
                    <i class="fas fa-chevron-down" id="cat-arrow-down" style="display: inline-block"></i>
                    <i class="fas fa-chevron-up" id="cat-arrow-up" style="display: none"></i>
                </span>
            </h1>
            <div class="tree-categories-container" id="category-list">
                {% macro menu_categories(categories) %}
                    {% import _self as macros %}
                    {% for category in categories %}
                        <ul>
                            <li class="cat-accordion-header">
                                <button class="cat-accordion-button_{{category.slug}}" type="button" aria-expanded="true"
                                        style="color: {{category.color.codeText}}; background: {{category.color.codeBg}}"
                                >
                                    {{ category.label }}
                                    {% if category.subCategories|length > 0 %}
                                        <i class="fas fa-chevron-down" id="{{category.slug}}-subCat-arrow-down" style="display: inline-block"></i>
                                        <i class="fas fa-chevron-up" id="{{category.slug}}-subCat-arrow-up"style="display:none"></i>
                                    {% endif %}
                                </button>
                            </li>
                            {% if category.subCategories|length > 0 %}
                                <div id="cat-accordion-sub_{{category.slug}}" style="display: none" class="cat-accordion-body">
                                    {{ macros.menu_categories(category.subCategories) }}
                                </div>
                            {% endif %}
                        </ul>
                    {% endfor %}
                {% endmacro %}

                {% import _self as macros %}

                {{ macros.menu_categories(categories, 1) }}
            </div>
            <form action="" class="form-container">
                <fieldset>
                    <legend>{% trans %}Ajouter une catégorie{% endtrans %}</legend>
                        {{ form_start(category_form) }}
                            {{ form_row(category_form.label) }}
                            {{ form_row(category_form.parent) }}
                            {{ form_row(category_form.color) }}
                            <fieldset class="form-custom-colors">
                                <legend>.. où modifier les couleurs</legend>
                                <div class="custom-colors-container">
                                    <div class="flex-equal">{{ form_row(category_form.bgColorPicker) }}</div>
                                    <div class="flex-equal">{{ form_row(category_form.textColorPicker) }}</div>
                                </div>
                            </fieldset>
                            {{ form_row(category_form.submitNewCategory) }}
                        {{ form_end(category_form) }}
                </fieldset>
            </form>

        </section>
        <section class="colors-handle-container col-12 col-md-4">
            <h1>{% trans %}Couleurs existantes{% endtrans %}</h1>
            <form action="" class="form-container">
                <fieldset>
                    <legend>{% trans %}Ajouter une couleur{% endtrans %}</legend>
                        {{ form_start(color_form) }}
                            <div class="form-custom-colors">
                                <div class="custom-colors-container form-colors">
                                    <div class="flex-equal">{{ form_row(color_form.code_text) }}</div>
                                    <div class="flex-equal">{{ form_row(color_form.code_bg) }}</div>
                                </div>
                                {{ form_row(color_form.submitNewColor) }}
                            </div>
                        {{ form_end(color_form) }}
                </fieldset>
            </form>
        </section>
    </div>

{% endblock %}

{% block js %}
    {{ parent() }}
    <script>
        window.onload = () => {
            // Add a listener to the category title to show/hide the subCategories
            let buttons = document.querySelectorAll("button[class*='cat-accordion-button']");
            for(let button of buttons) {
                const label = button.className.split('_')[1];
                const subCatArrowDown = document.getElementById(`${label}-subCat-arrow-down`);
                const subCatArrowUp = document.getElementById(`${label}-subCat-arrow-up`);
                button.addEventListener("click", function(){
                    const toggleNode = document.getElementById(`cat-accordion-sub_${label}`);
                    toggleNode.style.display = toggleNode.style.display === "none" ? "inline-block" : "none";
                    subCatArrowDown.style.display = subCatArrowDown.style.display === "inline-block" ? "none" : "inline-block";
                    subCatArrowUp.style.display = subCatArrowUp.style.display === "inline-block" ? "none" : "inline-block";
                })
            }

            // Hide/show list of categories on click
            const handleButtonList = document.getElementById('category-title');
            {# console.log(catArrow.className); #}
            const catArrowDown = document.getElementById('cat-arrow-down');
            const catArrowUp = document.getElementById('cat-arrow-up');
            handleButtonList.addEventListener("click", function(){
                const categoryList = document.getElementById('category-list');
                categoryList.style.display = categoryList.style.display === "none" ? "inline-block" : "none";
                catArrowDown.style.display = catArrowDown.style.display === "inline-block" ? "none" : "inline-block";
                catArrowUp.style.display = catArrowUp.style.display === "inline-block" ? "none" : "inline-block";
                console.log(catArrowUp.style.display)
            })
        }
    </script>
{% endblock %}