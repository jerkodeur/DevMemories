<?php

namespace ContainerWFx6Gfw;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_QKcwpxBService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.qKcwpxB' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.qKcwpxB'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\Dashboard\\CategoryController::checkIfSameParent' => ['privates', '.service_locator.478xwl1', 'get_ServiceLocator_478xwl1Service', true],
            'App\\Controller\\Dashboard\\CategoryController::delete' => ['privates', '.service_locator.478xwl1', 'get_ServiceLocator_478xwl1Service', true],
            'App\\Controller\\Dashboard\\CategoryController::edit' => ['privates', '.service_locator.478xwl1', 'get_ServiceLocator_478xwl1Service', true],
            'App\\Controller\\Dashboard\\CategoryController::handleNewCategoryRequest' => ['privates', '.service_locator.478xwl1', 'get_ServiceLocator_478xwl1Service', true],
            'App\\Controller\\Dashboard\\CategoryController::handleNewColorRequest' => ['privates', '.service_locator.NCSJtnY', 'get_ServiceLocator_NCSJtnYService', true],
            'App\\Controller\\Dashboard\\CategoryController::validateColor' => ['privates', '.service_locator.NCSJtnY', 'get_ServiceLocator_NCSJtnYService', true],
            'App\\Controller\\Dashboard\\ColorController::delete' => ['privates', '.service_locator.NCSJtnY', 'get_ServiceLocator_NCSJtnYService', true],
            'App\\Controller\\Dashboard\\ContentController::delete' => ['privates', '.service_locator.lshXhOF', 'get_ServiceLocator_LshXhOFService', true],
            'App\\Controller\\Dashboard\\ContentController::edit' => ['privates', '.service_locator.lshXhOF', 'get_ServiceLocator_LshXhOFService', true],
            'App\\Controller\\Dashboard\\ContentController::switchPrivate' => ['privates', '.service_locator.lshXhOF', 'get_ServiceLocator_LshXhOFService', true],
            'App\\Controller\\Dashboard\\ContentController::switchPublished' => ['privates', '.service_locator.lshXhOF', 'get_ServiceLocator_LshXhOFService', true],
            'App\\Controller\\RegistrationController::register' => ['privates', '.service_locator.wOdllM6', 'get_ServiceLocator_WOdllM6Service', true],
            'App\\Controller\\RegistrationController::verifyUserEmail' => ['privates', '.service_locator..Ae5NXw', 'get_ServiceLocator__Ae5NXwService', true],
            'App\\Controller\\ResetPasswordController::request' => ['privates', '.service_locator.CpaXrFh', 'get_ServiceLocator_CpaXrFhService', true],
            'App\\Controller\\ResetPasswordController::reset' => ['privates', '.service_locator.nWpr6Po', 'get_ServiceLocator_NWpr6PoService', true],
            'App\\Controller\\SecurityController::login' => ['privates', '.service_locator.nDyv8k0', 'get_ServiceLocator_NDyv8k0Service', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Kernel::terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
            'App\\Controller\\Dashboard\\CategoryController:checkIfSameParent' => ['privates', '.service_locator.478xwl1', 'get_ServiceLocator_478xwl1Service', true],
            'App\\Controller\\Dashboard\\CategoryController:delete' => ['privates', '.service_locator.478xwl1', 'get_ServiceLocator_478xwl1Service', true],
            'App\\Controller\\Dashboard\\CategoryController:edit' => ['privates', '.service_locator.478xwl1', 'get_ServiceLocator_478xwl1Service', true],
            'App\\Controller\\Dashboard\\CategoryController:handleNewCategoryRequest' => ['privates', '.service_locator.478xwl1', 'get_ServiceLocator_478xwl1Service', true],
            'App\\Controller\\Dashboard\\CategoryController:handleNewColorRequest' => ['privates', '.service_locator.NCSJtnY', 'get_ServiceLocator_NCSJtnYService', true],
            'App\\Controller\\Dashboard\\CategoryController:validateColor' => ['privates', '.service_locator.NCSJtnY', 'get_ServiceLocator_NCSJtnYService', true],
            'App\\Controller\\Dashboard\\ColorController:delete' => ['privates', '.service_locator.NCSJtnY', 'get_ServiceLocator_NCSJtnYService', true],
            'App\\Controller\\Dashboard\\ContentController:delete' => ['privates', '.service_locator.lshXhOF', 'get_ServiceLocator_LshXhOFService', true],
            'App\\Controller\\Dashboard\\ContentController:edit' => ['privates', '.service_locator.lshXhOF', 'get_ServiceLocator_LshXhOFService', true],
            'App\\Controller\\Dashboard\\ContentController:switchPrivate' => ['privates', '.service_locator.lshXhOF', 'get_ServiceLocator_LshXhOFService', true],
            'App\\Controller\\Dashboard\\ContentController:switchPublished' => ['privates', '.service_locator.lshXhOF', 'get_ServiceLocator_LshXhOFService', true],
            'App\\Controller\\RegistrationController:register' => ['privates', '.service_locator.wOdllM6', 'get_ServiceLocator_WOdllM6Service', true],
            'App\\Controller\\RegistrationController:verifyUserEmail' => ['privates', '.service_locator..Ae5NXw', 'get_ServiceLocator__Ae5NXwService', true],
            'App\\Controller\\ResetPasswordController:request' => ['privates', '.service_locator.CpaXrFh', 'get_ServiceLocator_CpaXrFhService', true],
            'App\\Controller\\ResetPasswordController:reset' => ['privates', '.service_locator.nWpr6Po', 'get_ServiceLocator_NWpr6PoService', true],
            'App\\Controller\\SecurityController:login' => ['privates', '.service_locator.nDyv8k0', 'get_ServiceLocator_NDyv8k0Service', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel:terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
        ], [
            'App\\Controller\\Dashboard\\CategoryController::checkIfSameParent' => '?',
            'App\\Controller\\Dashboard\\CategoryController::delete' => '?',
            'App\\Controller\\Dashboard\\CategoryController::edit' => '?',
            'App\\Controller\\Dashboard\\CategoryController::handleNewCategoryRequest' => '?',
            'App\\Controller\\Dashboard\\CategoryController::handleNewColorRequest' => '?',
            'App\\Controller\\Dashboard\\CategoryController::validateColor' => '?',
            'App\\Controller\\Dashboard\\ColorController::delete' => '?',
            'App\\Controller\\Dashboard\\ContentController::delete' => '?',
            'App\\Controller\\Dashboard\\ContentController::edit' => '?',
            'App\\Controller\\Dashboard\\ContentController::switchPrivate' => '?',
            'App\\Controller\\Dashboard\\ContentController::switchPublished' => '?',
            'App\\Controller\\RegistrationController::register' => '?',
            'App\\Controller\\RegistrationController::verifyUserEmail' => '?',
            'App\\Controller\\ResetPasswordController::request' => '?',
            'App\\Controller\\ResetPasswordController::reset' => '?',
            'App\\Controller\\SecurityController::login' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::terminate' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'kernel::terminate' => '?',
            'App\\Controller\\Dashboard\\CategoryController:checkIfSameParent' => '?',
            'App\\Controller\\Dashboard\\CategoryController:delete' => '?',
            'App\\Controller\\Dashboard\\CategoryController:edit' => '?',
            'App\\Controller\\Dashboard\\CategoryController:handleNewCategoryRequest' => '?',
            'App\\Controller\\Dashboard\\CategoryController:handleNewColorRequest' => '?',
            'App\\Controller\\Dashboard\\CategoryController:validateColor' => '?',
            'App\\Controller\\Dashboard\\ColorController:delete' => '?',
            'App\\Controller\\Dashboard\\ContentController:delete' => '?',
            'App\\Controller\\Dashboard\\ContentController:edit' => '?',
            'App\\Controller\\Dashboard\\ContentController:switchPrivate' => '?',
            'App\\Controller\\Dashboard\\ContentController:switchPublished' => '?',
            'App\\Controller\\RegistrationController:register' => '?',
            'App\\Controller\\RegistrationController:verifyUserEmail' => '?',
            'App\\Controller\\ResetPasswordController:request' => '?',
            'App\\Controller\\ResetPasswordController:reset' => '?',
            'App\\Controller\\SecurityController:login' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:terminate' => '?',
        ]);
    }
}
